<?php 	/* clearing all spaces */	function trimspaces($str) {				$str = trim($str);		$str = str_replace(' ','',$str);		$str = str_replace("\n",'',$str);		$str = str_replace("\t",'',$str);		$str = str_replace("\r",'',$str);		$str = str_replace("\0",'',$str);		$str = str_replace("\x0B",'',$str);		return $str;		}		function cleanStringFromOtherChars($str) {				$str = trimspaces($str);		$str = str_replace('!','',$str);		$str = str_replace('_','',$str);		$str = str_replace("'",'',$str);		$str = str_replace('"','',$str);		$str = str_replace('\\','',$str);		$str = str_replace('/','',$str);		$str = str_replace('.','',$str);		$str = str_replace(',','',$str);		return $str;	}		function SqlInjectFilter($str) {		//$str = str_replace(" ",'',$str);		//$str = mysql_real_escape_string($str);		$str = str_replace("\n",'',$str);		$str = str_replace("\t",'',$str);		$str = str_replace("\r",'',$str);		$str = str_replace("\0",'',$str);		$str = str_replace("\x0B",'',$str);		$str = str_replace("'",'',$str);		$str = str_replace('"','',$str);		$str = str_replace('\\','',$str);		$str = str_replace('/','',$str);		$str = str_ireplace ("and","",$str); 		$str = str_ireplace ("execute","",$str); 		$str = str_ireplace ("update","",$str); 		$str = str_ireplace ("count","",$str); 		$str = str_ireplace ("chr","",$str); 		$str = str_ireplace ("mid","",$str); 		$str = str_ireplace ("master","",$str); 		$str = str_ireplace ("truncate","",$str); 		$str = str_ireplace ("char","",$str); 		$str = str_ireplace ("declare","",$str); 		$str = str_ireplace ("select","",$str); 		$str = str_ireplace ("create","",$str); 		$str = str_ireplace ("delete","",$str); 		$str = str_ireplace ("insert","",$str); 		$str = str_ireplace ("union","",$str); 		$str = str_replace ("\"","",$str); 		$str = str_replace ('"',"",$str); 		//$str = str_replace (" ","",$str); 		$str = str_replace ("$","",$str); 		$str = str_ireplace ("or ","",$str); 		$str = str_replace ("=","",$str); 		$str = str_replace ("% 20 ","",$str);		$str = addslashes($str);		$str = htmlspecialchars($str);		$str = trim($str);				return $str;	}		function tags_filter($str) {				//$str = str_replace(";",'; ',$str);		//$pattern = '/(&[^;]*;{1})/im';		//preg_replace('/(&[^;]*;{1})/Uim',"#",$str);				$str = preg_replace("'<[\/\!]*?[^<>]*?>'si","",$str);		$str = preg_replace("'([\r\n])[\s]+'","",$str);				$search = array ("'<script[^>]*?>.*?</script>'si",  // Strip out javascript			 "'<[\/\!]*?[^<>]*?>'si",           // Strip out html tags			 "'([\r\n])[\s]+'",                 // Strip out white space			 "'&(quot #34);'i",                 // Replace html entities			 "'&(amp #38);'i",			 "'&(lt #60);'i",			 "'&(gt #62);'i",			 "'&(nbsp #160);'i",			 "'&(iexcl #161);'i",			 "'&(cent #162);'i",			 "'&(pound #163);'i",			 "'&(copy #169);'i",			 "'&#(\d+);'e");                    // evaluate as php		$replace = array ("",						  "",						  "",						  "",						  "",						  "",						  "",						  "",						  "",						  "",						  "",						  "",						  "");			//$text = preg_replace($search,$replace,$str);		return $str;	}		function SqlInjectFilterMini($str) {        global $mysql;		$str = addslashes($str);		$str = htmlspecialchars($str);		$str = trim($str);		//$str = str_replace(" ",'',$str);       //$str = mysqli_real_escape_string($mysql->getConnect(), $str);		$str = str_replace("\n",'',$str);		$str = str_replace("\t",'',$str);		$str = str_replace("\r",'',$str);		$str = str_replace("\0",'',$str);		$str = str_replace("\x0B",'',$str);		//$str = str_replace("'",'',$str);		//$str = str_replace('"','',$str);		//$str = str_replace('\\','',$str);		//$str = str_replace('/','',$str);		//$str = str_ireplace (" and ","",$str); 		//$str = str_ireplace ("execute","",$str); 		//$str = str_ireplace ("update","",$str); 		//$str = str_ireplace ("count","",$str); 		//$str = str_ireplace ("chr ","",$str); 		//$str = str_ireplace ("master ","",$str); 		//$str = str_ireplace ("truncate","",$str); 		//$str = str_ireplace ("char ","",$str); 		//$str = str_ireplace ("declare","",$str); 		//$str = str_ireplace ("select","",$str); 		//$str = str_ireplace ("create","",$str); 		//$str = str_ireplace ("delete","",$str); 		//$str = str_ireplace ("insert","",$str); 		//$str = str_ireplace ("union","",$str); 		//$str = str_replace ("\"","",$str); 		//$str = str_replace ('"',"",$str); 		//$str = str_replace (" ","",$str); 		$str = str_replace ("$","",$str); 		//$str = str_ireplace ("or ","",$str); 		$str = str_replace ("=","",$str); 		$str = str_replace ("% 20 ","",$str);		return $str;	}		function SqlInjectFilter_new($str){		$str = mysql_real_escape_string($str);		$str = addslashes($str);		$str = strip_tags($str);		$str = htmlspecialchars($str);		$str = trim($str);		$str = str_replace("\n",'',$str);		$str = str_replace("\t",'',$str);		$str = str_replace("\r",'',$str);		$str = str_replace("\0",'',$str);		$str = str_replace("\x0B",'',$str);		return $str;			}		function is_valid_email($email) {	 	return filter_var($email, FILTER_VALIDATE_EMAIL);	}			function clearFolderName($folderName){		$folderName = str_replace("\\","",$folderName);		$folderName = str_replace("/","",$folderName);		$folderName = str_replace(":","",$folderName);		$folderName = str_replace("*","",$folderName);		$folderName = str_replace("?","",$folderName);		$folderName = str_replace("\"","",$folderName);		$folderName = str_replace("<","",$folderName);		$folderName = str_replace(">","",$folderName);		$folderName = str_replace("|","",$folderName);				return $folderName;	}	function encodeUserPassword($password){		$encoded = md5(md5($password."_jh"));		return $encoded;	}		function clearFileName($folderName){		$folderName = str_replace("*","",$folderName);		$folderName = str_replace("?","",$folderName);		$folderName = str_replace("<","",$folderName);		$folderName = str_replace(">","",$folderName);		$folderName = str_replace("|","",$folderName);		$folderName = str_replace ("% 20 ","",$folderName);		$folderName = str_replace("\x0B",'',$folderName);		$folderName = addslashes($folderName);		$folderName = htmlspecialchars($folderName);		return $folderName;	}		function logw($module,$action,$desc){		/*		$fp = fopen("app_log.log", "a+");		$data = date("Y-m-d H:i:s").",".$_SERVER['REMOTE_ADDR'].",".$_SESSION['cpuserLogin'].",".$module.",".$action.",".str_replace(",","@",clearFileName($desc));		$write = fputs($fp, $data.";".PHP_EOL);		fclose($fp);		*/	}		function clearUrlName($name){		$name = str_replace("*","",$name);		$name = str_replace(" ","_",$name);		$name = str_replace("=","-",$name);		$name = str_replace("?","",$name);		$name = str_replace("/","",$name);		$name = str_replace("/","",$name);		$name = str_replace("|","",$name);		$name = str_replace("\"","",$name);		$name = str_replace("\'","",$name);		$name = str_replace(">","",$name);		$name = str_replace("<","",$name);		$name = str_replace(",","-",$name);		$name = str_replace("!","-",$name);		$name = str_replace("#","-",$name);		$name = str_replace("%","-",$name);		$name = str_replace("&","-",$name);		$name = str_replace("%","-",$name);		$name = str_replace("\"","",$name);		$name = str_replace("'","",$name);				$name = str_replace("Ə","E",$name);		$name = str_replace("ə","e",$name);		$name = str_replace("ı","i",$name);		$name = str_replace("İ","I",$name);		$name = str_replace("I","I",$name);				$name = str_replace("Ü","U",$name);		$name = str_replace("ü","u",$name);		$name = str_replace("Ş","SH",$name);		$name = str_replace("ş","sh",$name);		$name = str_replace("Ö","O",$name);		$name = str_replace("ö","o",$name);		$name = str_replace("Ğ","G",$name);		$name = str_replace("ğ","g",$name);		$name = str_replace("Ç","C",$name);		$name = str_replace("ç","c",$name);						return $name;	}			// This function will proportionally resize image 	function resizeImage($CurWidth,$CurHeight,$MaxSize,$DestFolder,$SrcImage,$Quality,$ImageType)	{		//Check Image size is not 0		if($CurWidth <= 0 || $CurHeight <= 0) 		{			return false;		}				//Construct a proportional size of new image		$ImageScale         = min($MaxSize/$CurWidth, $MaxSize/$CurHeight); 		$NewWidth           = ceil($ImageScale*$CurWidth);		$NewHeight          = ceil($ImageScale*$CurHeight);		$NewCanves          = imagecreatetruecolor($NewWidth, $NewHeight);				// Resize Image		if(imagecopyresampled($NewCanves, $SrcImage,0, 0, 0, 0, $NewWidth, $NewHeight, $CurWidth, $CurHeight))		{			switch(strtolower($ImageType))			{				case 'image/png':					imagepng($NewCanves,$DestFolder);					break;				case 'image/gif':					imagegif($NewCanves,$DestFolder);					break;          				case 'image/jpeg':				case 'image/pjpeg':					imagejpeg($NewCanves,$DestFolder,$Quality);					break;				default:					return false;			}		//Destroy image, frees memory   		if(is_resource($NewCanves)) {imagedestroy($NewCanves);} 		return true;		}		}	//This function corps image to create exact square images, no matter what its original size!	function cropImage($CurWidth,$CurHeight,$iSize,$DestFolder,$SrcImage,$Quality,$ImageType)	{    		//Check Image size is not 0		if($CurWidth <= 0 || $CurHeight <= 0) 		{			return false;		}				//abeautifulsite.net has excellent article about "Cropping an Image to Make Square bit.ly/1gTwXW9		if($CurWidth>$CurHeight)		{			$y_offset = 0;			$x_offset = ($CurWidth - $CurHeight) / 2;			$square_size    = $CurWidth - ($x_offset * 2);		}else{			$x_offset = 0;			$y_offset = ($CurHeight - $CurWidth) / 2;			$square_size = $CurHeight - ($y_offset * 2);		}				$NewCanves  = imagecreatetruecolor($iSize, $iSize); 		if(imagecopyresampled($NewCanves, $SrcImage,0, 0, $x_offset, $y_offset, $iSize, $iSize, $square_size, $square_size))		{			switch(strtolower($ImageType))			{				case 'image/png':					imagepng($NewCanves,$DestFolder);					break;				case 'image/gif':					imagegif($NewCanves,$DestFolder);					break;          				case 'image/jpeg':				case 'image/pjpeg':					imagejpeg($NewCanves,$DestFolder,$Quality);					break;				default:					return false;			}		//Destroy image, frees memory   		if(is_resource($NewCanves)) {imagedestroy($NewCanves);} 		return true;			}		  	}		function getExtension($str) {				 $i = strrpos($str,".");			 if (!$i) { return ""; } 			 $l = strlen($str) - $i;			 $ext = substr($str,$i+1,$l);			 return $ext;	 }		function resizeImageByWidth($uploadedfile,$extension,$newwidth,$file_dest_name){		$extension = strtolower($extension);		list($width,$height) = getimagesize($uploadedfile);		if($width > $newwidth) {				if($extension=="jpg" || $extension=="jpeg" ) {					$src = imagecreatefromjpeg($uploadedfile);				} else if($extension=="png") {					$src = imagecreatefrompng($uploadedfile);				} else {					$src = imagecreatefromgif($uploadedfile);				}																				$newheight=($height/$width)*$newwidth;				$tmp = imagecreatetruecolor($newwidth,$newheight);								imagecopyresampled($tmp,$src,0,0,0,0,$newwidth,$newheight,$width,$height);				imagejpeg($tmp,$file_dest_name,100);				imagedestroy($src);				imagedestroy($tmp);				return $file_dest_name;		} else {			return $uploadedfile;		}	}			function resizeImageByHeight($uploadedfile,$extension,$newheight,$file_dest_name){		$extension = strtolower($extension);		list($width,$height) = getimagesize($uploadedfile);		if($height > $newheight) {				if($extension=="jpg" || $extension=="jpeg" ) {					$src = imagecreatefromjpeg($uploadedfile);				} else if($extension=="png") {					$src = imagecreatefrompng($uploadedfile);				} else {					$src = imagecreatefromgif($uploadedfile);				}								$newwidth = ($width/$height)*$newheight;				$tmp = imagecreatetruecolor($newwidth,$newheight);								imagecopyresampled($tmp,$src,0,0,0,0,$newwidth,$newheight,$width,$height);				imagejpeg($tmp,$file_dest_name,100);				imagedestroy($src);				imagedestroy($tmp);				return $file_dest_name;		} else {			return $uploadedfile;		}	}		function saveProductInHistory($productId){		if(!isset($_SESSION["prodHistory"])) {			$historyArray = array($productId);			$_SESSION["prodHistory"] = json_encode($historyArray);			//setcookie("prodHistory",json_encode($historyArray));		} else {			$historyArray = json_decode($_SESSION["prodHistory"]);			if(in_array($productId,$historyArray) == false) {				$historyArray[] = $productId;				//setcookie("prodHistory",json_encode($historyArray));				$_SESSION["prodHistory"] = json_encode($historyArray);			}		}			}		function getAzAlphabet(){		$alp = array("A","B","C","Ç","D","E","Ə","F","G","H","X","İ","J","K","Q","L","M","N","O","Ö","P","R","S","Ş","T","U","Ü","V","Y","Z");			return $alp;	}		function getRuAlphabet(){		$alp = array("А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я");			return $alp;	}		function getEnAlphabet(){		$alp = array("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z");			return $alp;	}		function getJsonFromResult($result){		$rows = array();		while($r = mysql_fetch_assoc($result)) {			$rows[] = $r;		}		return json_encode($rows);	}?>